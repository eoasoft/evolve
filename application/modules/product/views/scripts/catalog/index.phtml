<!doctype html>
<html>
<head>
<?php echo SYS_HEAD; ?>
<script type="text/javascript">
var user_id = <?php echo $this->user_id?>;
var salesDisable = <?php echo $this->salesDisable;?>;
var pmDisable = <?php echo $this->pmDisable;?>;
var adminDisable = <?php echo $this->adminDisable;?>;

Ext.Loader.setConfig({enabled: true});
Ext.Loader.setPath('Ext.ux', homePath+'/library/ext/examples/ux');
Ext.require([
    'Ext.data.*',
    'Ext.grid.*',
    'Ext.tree.*',
    'Ext.form.Panel',
    'Ext.ux.form.ItemSelector',
    'Ext.ux.ajax.SimManager'
]);
</script>
<link rel="stylesheet" type="text/css" href="<?php echo HOME_PATH; ?>/library/ext/examples/ux/css/ItemSelector.css" />
<script type="text/javascript" src="<?php echo HOME_PATH?>/application/modules/product/views/scripts/catalog/js/options.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH?>/application/modules/product/views/scripts/catalog/js/attributes_addrole.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH?>/application/modules/product/views/scripts/catalog/js/attributes.js"></script>
<script type="text/javascript">
// 产品目录数据模型
Ext.define('Catalog', {
    extend: 'Ext.data.Model',
    fields: [{name: "id"}, 
             {name: "type_id"}, 
             {name: "series_id"}, 
             {name: "active"}, 
             {name: "model_standard"}, 
             {name: "model_internal"}, 
             {name: "code"}, 
             {name: "description"}, 
             {name: "code_old"}, 
             {name: "code_customer"}, 
             {name: "model_customer"}, 
             {name: "description_customer"}, 
             {name: "developmode_id"}, 
             {name: "stage_id"}, 
             {name: "stage_name"}, 
             {name: "reviewer"}, 
             {name: "can_review"}, 
             {name: "review_info"}, 
             {name: "review_info_tip"}, 
             {name: "date_dvt",type: 'date',dateFormat: 'Y-m-d'}, 
             {name: "qa1_date",type: 'date',dateFormat: 'Y-m-d'}, 
             {name: "qa2_date",type: 'date',dateFormat: 'Y-m-d'}, 
             {name: "evt_date",type: 'date',dateFormat: 'Y-m-d'}, 
             {name: "mass_production_date",type: 'date',dateFormat: 'Y-m-d'}, 
             {name: "auditor_id"},
             {name: "auditor_time",type: 'date',dateFormat: 'timestamp'}, 
             {name: "delete"},
             {name: "remark"}, 
             {name: "create_time",type: 'date',dateFormat: 'timestamp'}, 
             {name: "update_time",type: 'date',dateFormat: 'timestamp'}, 
             {name: "create_user"}, 
             {name: "update_user"}, 
             {name: "auditor_remark"}, 
             {name: "review"}]
});

// 用户数据模型
Ext.define('Selection', {
    extend: 'Ext.data.Model',
    fields: [{name: "id"}, 
             {name: "name"},
             {name: "text"}]
});

// 用户数据源
var userStore = Ext.create('Ext.data.Store', {
	model: 'Selection',
	proxy: {
        type: 'ajax',
        reader: 'json',
        url: homePath+'/public/admin/account/getuserlist'
    },
    autoLoad: true
});

// 申请人列表
var createUserStore = Ext.create('Ext.data.Store', {
	model: 'Selection',
	proxy: {
        type: 'ajax',
        reader: 'json',
        url: '<?php echo HOME_PATH; ?>/public/product/catalog/getuserlist/type/create_user'
    },
    autoLoad: true
});

// 审核人列表
var auditorUserStore = Ext.create('Ext.data.Store', {
	model: 'Selection',
	proxy: {
        type: 'ajax',
        reader: 'json',
        url: '<?php echo HOME_PATH; ?>/public/product/catalog/getuserlist/type/auditor_id'
    },
    autoLoad: true
});

// 超长提示
var longtextRender = function(val, cellmeta, record){
	cellmeta.tdAttr = 'data-qtip="' + val + '"';
	return val;
};

// 产品目录数据源
var catalogStore = Ext.create('Ext.data.Store', {
    model: 'Catalog',
    pageSize: 50,
    proxy: {
        type: 'ajax',
        reader: {
            type: 'json',
            root: 'rows',
            totalProperty: 'total'
        },
        url: '<?php echo HOME_PATH; ?>/public/product/catalog/getcatalog/option/data'
    },
    listeners: {
    	beforeload: loadCatalog
    }
});

function loadCatalog(){
    var search_type = 'key';
	
	var key = Ext.getCmp('search_key').getValue();
    var type_id = Ext.getCmp('search_type_id').getValue();
    var create_user = Ext.getCmp('filter_create_user').getValue();
    var auditor_id = Ext.getCmp('filter_auditor_id').getValue();
    var developmode_id = Ext.getCmp('search_developmode_id').getValue();
    var series_id = Ext.getCmp('search_series_id').getValue();
    var have_code = Ext.getCmp('search_have_code').getValue();
    var stage_id = Ext.getCmp('search_stage_id').getValue();
	var display_deleted = Ext.getCmp('search_display_deleted').getValue();
    var active = Ext.getCmp('search_active').getValue();
    var date_from = Ext.Date.format(Ext.getCmp('search_date_from').getValue(), 'Y-m-d');
    var date_to = Ext.Date.format(Ext.getCmp('search_date_to').getValue(), 'Y-m-d');
    var evt_date = Ext.getCmp('search_evt_date').getValue();
    var dvt_date = Ext.getCmp('search_dvt_date').getValue();
    var qa1_date = Ext.getCmp('search_qa1_date').getValue();
    var qa2_date = Ext.getCmp('search_qa2_date').getValue();
    var mass_production_date = Ext.getCmp('search_mass_production_date').getValue();
    
	Ext.apply(catalogStore.proxy.extraParams, {
		search_type: search_type,
		active: active,
		date_from: date_from,
		date_to: date_to,
		key: key,
		evt_date: evt_date,
		dvt_date: dvt_date,
		qa1_date: qa1_date,
		qa2_date: qa2_date,
		mass_production_date: mass_production_date,
		create_user: create_user,
		auditor_id: auditor_id,
		display_deleted: display_deleted,
		type_id: type_id,
		have_code: have_code,
		developmode_id: developmode_id,
		series_id: series_id,
		stage_id: stage_id
    });
};

var editcatalogForm = Ext.create('Ext.form.Panel', {
	id: 'editcatalogForm',
	border: 0,
	bodyPadding: '5 5 0',
    url: homePath+'/public/product/catalog/editcatalog',
    fieldDefaults: {
        msgTarget: 'side',
        labelWidth: 75
    },
    items: [{
        xtype: 'hiddenfield',
        name: 'id',
        id: 'id'
    }, {
        xtype: 'hiddenfield',
        name: 'review',
        id: 'review'
    }, {
        xtype: 'hiddenfield',
        name: 'operate',
        id: 'operate'
    }, {
    	xtype: 'fieldcontainer',
    	hidden: true,
    	msgTarget : 'side',
        layout: 'hbox',
        defaults: {
            xtype: 'displayfield',
            labelStyle: 'font-weight:bold',
            flex: 1,
            labelWidth: 80,
            labelAlign: 'right'
        },
        items: [{
        	xtype: 'checkboxfield',
        	fieldLabel: '启用',
        	checked: true,
        	name: 'active'
        }]
    }, {
    	xtype: 'fieldcontainer',
    	msgTarget : 'side',
        layout: 'hbox',
        defaults: {
        	xtype:'combobox',
            displayField: 'name',
            valueField: 'id',
            triggerAction: 'all',
            lazyRender: true,
            queryMode: 'local',
            afterLabelTextTpl: required,
            editable: false,
            labelStyle: 'font-weight:bold',
            flex: 1,
            labelWidth: 80,
            labelAlign: 'right'
        },
        items: [{
        	name: 'type_id',
        	fieldLabel: '产品分类',
        	store: typeStore
        }, {
        	name: 'series_id',
        	fieldLabel: '产品系列',
        	labelWidth: 100,
        	store: seriesStore
        }, {
        	name: 'developmode_id',
        	fieldLabel: '开发模式',
        	store: modeStore
        }]
    }, {
    	xtype: 'fieldcontainer',
    	msgTarget : 'side',
        layout: 'hbox',
        defaults: {
        	xtype:'textfield',
            labelStyle: 'font-weight:bold',
            flex: 1,
            labelWidth: 80,
            labelAlign: 'right'
        },
        items: [{
        	name: 'model_standard',
        	fieldLabel: '标准品型号'
        }, {
        	name: 'model_internal',
        	labelWidth: 100,
        	fieldLabel: '内部型号'
        }, {
        	name: 'code_customer',
        	fieldLabel: '客户代码'
        }]
    }, {
    	xtype: 'fieldcontainer',
    	msgTarget : 'side',
        layout: 'hbox',
        defaults: {
        	xtype:'textfield',
            labelStyle: 'font-weight:bold',
            labelAlign: 'right'
        },
        items: [{
        	name: 'model_customer',
        	flex: 1,
            labelWidth: 80,
        	fieldLabel: '客户型号'
        }, {
        	name: 'description_customer',
            flex: 2,
            labelWidth: 100,
        	fieldLabel: '客户产品描述'
        }]
    }, {
    	xtype: 'textareafield',
        height: 100,
        width: 780,
        enableFont: false,
        name: 'description',
        fieldLabel: '描述',
        labelStyle: 'font-weight:bold',
        labelWidth: 80,
        labelAlign: 'right'
    }, {
    	xtype: 'textareafield',
        height: 100,
        width: 780,
        enableFont: false,
        name: 'remark',
        fieldLabel: '备注',
        labelStyle: 'font-weight:bold',
        labelWidth: 80,
        labelAlign: 'right'
    }/* , {
        xtype: 'displayfield',
        fieldLabel: '',
        value: '不选审核人时，提交后自动发布，否则需要所指派的人员进行审批。'
    } */]
});

// 添加、修改产品窗口
var editCatalogWin = Ext.create('Ext.window.Window', {
	width: 800,
    modal: true,
    border: 0,
    constrain: true,
    layout: 'fit',
    closeAction: 'hide',
    resizable: false,
    items: [{
        region: 'center',
        split: true,
        items: [editcatalogForm],
        buttons: [{
            text: '保存',
            id: 'editcatalog_sub',
            handler: function() {
                var form = editcatalogForm.getForm();
                
                if(form.isValid()){
                	Ext.MessageBox.confirm('确认', '确定保存？', function(button, text){
                        if(button == 'yes'){
                       	 form.submit({
                                waitMsg: '保存中，请稍后...',
                                success: function(form, action) {
                             	    var data = action.result;
                              	    
                                    if(data.success){
                                        Ext.MessageBox.alert('提示', data.info);
                                        editCatalogWin.hide();
                                        Ext.getCmp('catalogGrid').getView().getSelectionModel().clearSelections();
                                        Ext.getCmp('reviewBtn').disable();
                                        catalogStore.reload();
                                    }else{
                                        Ext.MessageBox.alert('错误', data.info);
                                    }
                                },
                                failure: function(form, action) {
                                    Ext.MessageBox.alert('错误', action.result.info);
                                }
                            });
                        }
                    });
                }
            }
        }, {
            text: '取消',
            handler: function() {
            	editcatalogForm.getForm().reset();
                editCatalogWin.hide();
            }
        }]
    }]
});

var reviewForm = Ext.create('Ext.form.Panel', {
	id: 'reviewForm',
	border: 0,
    url: homePath+'/public/product/catalog/review',
    bodyPadding: '5 5 0',
    fieldDefaults: {
        msgTarget: 'side',
        labelWidth: 75,
		labelStyle: 'font-weight:bold',
        flex: 1
    },
    items: [{
        xtype: 'hiddenfield',
        name: 'review_id',
        id: 'review_id'
    }, {
    	xtype: 'fieldcontainer',
    	msgTarget : 'side',
        layout: 'hbox',
        items: [{
        	xtype: 'radiogroup',
        	id: 'review_operate_type',
        	fieldLabel: '审核操作',
        	flex: 2,
        	listeners: {
                change: function change( reviewType, newValue, oldValue, eOpts ){
                    if(newValue.review_operate == 'transfer'){
                        Ext.getCmp('review_transfer_user').show();
                    }else{
                    	Ext.getCmp('review_transfer_user').hide();
                    }
                }
            },
            items: [{
                boxLabel: '批准',
                inputValue: 'ok',
                checked: true,
                name: 'review_operate'
            }, {
                boxLabel: '拒绝',
                inputValue: 'no',
                name: 'review_operate'
            }, {
                //hidden: true,
                boxLabel: '转审',
                inputValue: 'transfer',
                name: 'review_operate'
            }]
        }, {
        	xtype:'combobox',
        	hidden: true,
            displayField: 'name',
            valueField: 'id',
            triggerAction: 'all',
            lazyRender: true,
            queryMode: 'local',
            afterLabelTextTpl: required,
            editable: false,
            labelStyle: 'font-weight:bold',
            flex: 1,
            name: 'review_transfer_user',
            id: 'review_transfer_user',
        	store: userStore
        }]
    }, {
    	xtype: 'textareafield',
    	enableFont: false,
        height: 150,
        width: 460,
        name: 'review_remark',
        fieldLabel: '审核意见'
    }]
});

var reviewInfoWin = Ext.create('Ext.window.Window', {
    title: '审核日志',
    border: 0,
    width: 400,
    modal: true,
    constrain: true,
    id: 'reviewInfoWin',
    layout: 'fit',
    maximizable: true,
    resizable: true,
    closeAction: 'hide',
    resizable: true,
    padding: 10,
    items: [{
         xtype: 'displayfield',
         id: 'reviewInfoView'
    }]
});

//查看审核日志
function viewReviewInfo(info)
{
    reviewInfoWin.show();
    var regS = new RegExp(">","gi");
    Ext.getCmp('reviewInfoView').setValue(info.replace(regS, '<br>'));
}

// 审核窗口
var reviewCatalogWin = Ext.create('Ext.window.Window', {
	title: '审核',
	width: 500,
    modal: true,
    constrain: true,
    layout: 'fit',
    closeAction: 'hide',
    resizable: false,
    items: [{
        region: 'center',
        split: true,
        border: 0,
        items: [reviewForm],
        buttons: [{
            text: '提交',
            id: 'review_sub',
            handler: function() {
                var form = reviewForm.getForm();

                var operateType = Ext.getCmp('review_operate_type').getValue().review_operate;
                var transferUser = Ext.getCmp('review_transfer_user').getValue();
                
                if(operateType == 'transfer' && transferUser == null){
                	Ext.MessageBox.alert('错误', '请选择转审对象');
                }else{
                	Ext.MessageBox.confirm('确认', '确定提交？', function(button, text){
                        if(button == 'yes'){
                       	 form.submit({
                                waitMsg: '提交中，请稍后...',
                                success: function(form, action) {
                             	    var data = action.result;
                              	    
                                    if(data.success){
                                        Ext.MessageBox.alert('提示', data.info);
                                        reviewCatalogWin.hide();
                                        Ext.getCmp('catalogGrid').getView().getSelectionModel().clearSelections();
                                        Ext.getCmp('reviewBtn').disable();
                                        catalogStore.reload();
                                    }else{
                                        Ext.MessageBox.alert('错误', data.info);
                                    }
                                },
                                failure: function(form, action) {
                                    Ext.MessageBox.alert('错误', action.result.info);
                                }
                            });
                        }
                    });
                }
            }
        }, {
            text: '取消',
            handler: function() {
            	reviewForm.getForm().reset();
                reviewCatalogWin.hide();
            }
        }]
    }]
});

// 申请人渲染
var createUserRender = function (val){
    if(val > 0){
        index = createUserStore.findExact('id',val); 
        if (index != -1){
            rs = createUserStore.getAt(index).data; 
            return rs.name; 
        }
        return val;
    }else{
        return '无';
    }
};

// 审核人渲染
var auditorUserRender = function (val){
    if(val > 0){
        index = auditorUserStore.findExact('id',val); 
        if (index != -1){
            rs = auditorUserStore.getAt(index).data; 
            return rs.name; 
        }
        return val;
    }else{
        return '无';
    }
};

// 产品目录
var catalogGrid = Ext.define('KitchenSink.view.grid.LockingGrid', {
	extend: 'Ext.grid.Panel',
	border: 0,
    xtype: 'locking-grid',
    id: 'catalogGrid',
    store: catalogStore,
    selType: 'checkboxmodel',
    columnLines: true,
    tbar: [{
    	xtype: 'combobox',
        id: 'search_active',
        value: 1,
        fieldLabel: '是否作废',
        editable: false,
        displayField: 'text',
        valueField: 'val',
        labelAlign: 'right',
        labelWidth: 60,
        width: 110,
        store: Ext.create('Ext.data.Store', {
            fields: ['text', 'val'],
            data: [
                {"text": "是", "val": 0},
                {"text": "否", "val": 1}
            ]
        }),
        listeners: {
            change: function(){
            	catalogStore.loadPage(1);
            }
        }
    }, {
        xtype: 'datefield',
        format: 'Y-m-d',
        width: 120,
        id: 'search_date_from',
        emptyText: '创建日期从...'
    }, {
        xtype: 'datefield',
        format: 'Y-m-d',
        width: 120,
        id: 'search_date_to',
        emptyText: '创建日期至...'
    }, {
        xtype: 'textfield',
        id: 'search_key',
        width: 150,
        emptyText: '关键字...',
        listeners: {
        	specialKey :function(field,e){
                if (e.getKey() == Ext.EventObject.ENTER){
                	catalogStore.loadPage(1);
                }
            }
        }
    }, {
        xtype: 'checkbox',
        boxLabel: '已删除',
        name: 'search_display_deleted',
        id: 'search_display_deleted'
    }, {
        xtype: 'splitbutton',
        text: '查询',
        iconCls: 'icon-search',
        handler: function(){
        	catalogStore.loadPage(1);
        },
        menu: [{
        	text: '导出',
        	disabled: pmDisable,
            iconCls: 'icon-export',
            handler: function(){
                var search_type = 'key';
            	
            	var key = Ext.getCmp('search_key').getValue();
                var type_id = Ext.getCmp('search_type_id').getValue();
                var create_user = Ext.getCmp('filter_create_user').getValue();
                var auditor_id = Ext.getCmp('filter_auditor_id').getValue();
                var developmode_id = Ext.getCmp('search_developmode_id').getValue();
                var series_id = Ext.getCmp('search_series_id').getValue();
                var stage_id = Ext.getCmp('search_stage_id').getValue();
            	var display_deleted = Ext.getCmp('search_display_deleted').getValue();
                var active = Ext.getCmp('search_active').getValue();
                var date_from = Ext.Date.format(Ext.getCmp('search_date_from').getValue(), 'Y-m-d');
                var date_to = Ext.Date.format(Ext.getCmp('search_date_to').getValue(), 'Y-m-d');
                var evt_date = Ext.getCmp('search_evt_date').getValue();
                var dvt_date = Ext.getCmp('search_dvt_date').getValue();
                var qa1_date = Ext.getCmp('search_qa1_date').getValue();
                var qa2_date = Ext.getCmp('search_qa2_date').getValue();
                var mass_production_date = Ext.getCmp('search_mass_production_date').getValue();
                
            	window.open(homePath+'/public/product/catalog/getcatalog/option/csv/active/'+active+'/date_from/'+date_from+
                    	'/date_to/'+date_to+'/key/'+key+'/evt_date/'+evt_date+'/dvt_date/'+dvt_date+
                    	'/qa1_date/'+qa1_date+'/qa2_date/'+qa2_date+'/mass_production_date/'+mass_production_date+'/create_user/'+create_user+
                    	'/auditor_id/'+auditor_id+'/display_deleted/'+display_deleted+'/type_id/'+type_id+'/developmode_id/'+developmode_id+
                    	'/series_id/'+series_id+'/stage_id/'+stage_id);
            }
        }]
    }, {
        xtype: 'splitbutton',
    	text: '添加',
    	tooltip: '选择行点击添加即复制被选择行信息',
    	disabled: salesDisable,
        iconCls: 'icon-add',
        handler: function(){
        	editCatalogWin.show();
        	var selection = Ext.getCmp('catalogGrid').getView().getSelectionModel().getSelection();

            if(selection.length == 1){
            	var record = selection[0];
            	editcatalogForm.getForm().reset();
            	editcatalogForm.getForm().loadRecord(record);
            	
            	editCatalogWin.setTitle('复制产品');
            }else{
         	   editcatalogForm.getForm().reset();
         	   editCatalogWin.setTitle('添加产品');
            }
            
        	Ext.getCmp('operate').setValue('add');
        },
        menu: [{
            text: '修改',
            iconCls: 'icon-edit',
            disabled: salesDisable,
            handler: function(){
            	var selection = Ext.getCmp('catalogGrid').getView().getSelectionModel().getSelection();

                if(selection.length == 0){
                    Ext.MessageBox.alert('错误', '没有选择修改对象！');
                }else if(selection[0].get('review') == 0){
                	Ext.MessageBox.alert('错误', '未审核不允许编辑！');
                }else{
                    var record = selection[0];
                	editcatalogForm.getForm().reset();
                	editcatalogForm.getForm().loadRecord(record);
                	editCatalogWin.setTitle('修改产品');
                	Ext.getCmp('operate').setValue('edit');
                	editCatalogWin.show();
                }
            }
        }, {
            text: '删除',
            iconCls: 'icon-delete',
            disabled: salesDisable,
            handler: function(){
            	var selection = Ext.getCmp('catalogGrid').getView().getSelectionModel().getSelection();

                if(selection.length == 0){
                    Ext.MessageBox.alert('错误', '没有选择修改对象！');
                }

                var record = selection[0];
                var id = record.get('id');

                if(record.get('review') == 2){
                	Ext.MessageBox.alert('错误', '当前型号已审批，不允许删除！');
                }else{
                	Ext.MessageBox.confirm('确认', '确定删除？', function(button, text){
                        if(button == 'yes'){
                        	Ext.Msg.wait('提交中，请稍后...', '提示');
                            Ext.Ajax.request({
                                url: homePath+'/public/product/catalog/editcatalog/operate/delete/id/'+id,
                                params: {},
                                method: 'POST',
                                success: function(response, options) {
                                    var data = Ext.JSON.decode(response.responseText);
                    
                                    if(data.success){
                                        Ext.MessageBox.alert('提示', data.info);
                                        catalogStore.reload(1);
                                    }else{
                                        Ext.MessageBox.alert('错误', data.info);
                                    }
                                },
                                failure: function(response){
                                    Ext.MessageBox.alert('错误', '提交失败');
                                }
                            });
                        }
                	});
                }
            }
        }, {
            text: '作废',
            id: 'disableBtn',
            disabled: true,
            tooltip: '只能作废已审核产品',
            handler: function(){
            	Ext.MessageBox.confirm('确认', '确定作废？', function(button, text){
                    if(button == 'yes'){
                    	var selection = Ext.getCmp('catalogGrid').getSelectionModel().getSelection();

                    	if(selection.length == 0){
                    		Ext.MessageBox.alert('错误', '请选择产品！');
                    	}else{
                    		var ids = selection[0].get('id').toString();

                    		for(var i = 1; i < selection.length; i++){
                    		    ids += ',' + selection[i].get('id');
                    		}

                    		Ext.Msg.wait('提交中，请稍后...', '提示');
                            Ext.Ajax.request({
                                url: homePath+'/public/product/catalog/editcatalog/operate/disable',
                                params: {ids: ids},
                                method: 'POST',
                                success: function(response, options) {
                                    var data = Ext.JSON.decode(response.responseText);
                    
                                    if(data.success){
                                        Ext.MessageBox.alert('提示', data.info);
                                        catalogStore.reload(1);
                                    }else{
                                        Ext.MessageBox.alert('错误', data.info);
                                    }
                                },
                                failure: function(response){
                                    Ext.MessageBox.alert('错误', '提交失败');
                                }
                            });
                        }
                    }
            	});
            }
        }, {
            text: '启用',
            id: 'enableBtn',
            disabled: true,
            tooltip: '只能启用已作废产品',
            handler: function(){
            	Ext.MessageBox.confirm('确认', '确定启用？', function(button, text){
                    if(button == 'yes'){
                    	var selection = Ext.getCmp('catalogGrid').getSelectionModel().getSelection();

                    	if(selection.length == 0){
                    		Ext.MessageBox.alert('错误', '请选择产品！');
                    	}else{
                    		var ids = selection[0].get('id').toString();

                    		for(var i = 1; i < selection.length; i++){
                    		    ids += ',' + selection[i].get('id');
                    		}

                    		Ext.Msg.wait('提交中，请稍后...', '提示');
                            Ext.Ajax.request({
                                url: homePath+'/public/product/catalog/editcatalog/operate/enable',
                                params: {ids: ids},
                                method: 'POST',
                                success: function(response, options) {
                                    var data = Ext.JSON.decode(response.responseText);
                    
                                    if(data.success){
                                        Ext.MessageBox.alert('提示', data.info);
                                        catalogStore.reload(1);
                                    }else{
                                        Ext.MessageBox.alert('错误', data.info);
                                    }
                                },
                                failure: function(response){
                                    Ext.MessageBox.alert('错误', '提交失败');
                                }
                            });
                        }
                    }
            	});
            }
        }]
    }, {
    	text: '审核',
    	id: 'reviewBtn',
    	disabled: true,
        iconCls: 'icon-accept',
        handler: function(){
        	var selection = Ext.getCmp('catalogGrid').getSelectionModel().getSelection();

        	if(selection.length == 0){
        		Ext.MessageBox.alert('错误', '请选择项目！');
        	}else if(selection[0].get('review') != 0){
        		Ext.MessageBox.alert('错误', '当前项目不能审核！');
        	}else{
        		reviewCatalogWin.show();

        		var ids = selection[0].get('id').toString();

        		for(var i = 1; i < selection.length; i++){
        		    ids += ',' + selection[i].get('id');
        		}

        		Ext.getCmp('review_id').setValue(ids);
            }
        }
    }, {
        xtype: 'splitbutton',
        iconCls: 'icon-form-edit',
    	text: '项目属性',
    	tooltip: '选择项目编辑属性',
    	disabled: pmDisable,
        handler: function(){
        	var selection = Ext.getCmp('catalogGrid').getSelectionModel().getSelection();

        	if(selection.length == 0){
        		Ext.MessageBox.alert('错误', '请选择项目！');
            }else if(selection.length > 1){
        		Ext.MessageBox.alert('错误', '不能多选！');
            }else if(selection[0].get('review') != 2){
        		Ext.MessageBox.alert('错误', '当前记录未审核，不能查看或维护！');
            }else{
                var catalog_id = selection[0].get('id');
                if(catalog_id != undefined){
                    attributeWin.show();

                    Ext.getCmp('roleMemberSetBtn').setDisabled(pmDisable);
                    Ext.getCmp('roleSetSaveBtn').setDisabled(pmDisable);
                    Ext.getCmp('productInfoSaveBtn').setDisabled(pmDisable);
    
                    Ext.getCmp('catalog_form').loadRecord(selection[0]);
                    Ext.getCmp('catalog_id').setValue(catalog_id);
                	
                    rolesetStore.load({
                        params: {
                        	catalog_id: catalog_id
                        }
                    });
                }else{
                    Ext.MessageBox.alert('错误', '所选记录尚未保存，不能修改项目属性！');
                }
            }
        },
        menu: [{
        	text: '产品阶段',
            handler: function(){
                stageWin.show();
            }
        }, {
        	text: '开发模式',
            handler: function(){
                modeWin.show();
            }
        }]
    }, {
        xtype: 'splitbutton',
        iconCls: 'icon-form-edit',
    	text: '产品分类',
    	disabled: adminDisable,
        handler: function(){
        	typeWin.show();
        },
        menu: [{
        	text: '产品系列',
        	disabled: adminDisable,
            handler: function(){
                seriesWin.show();
            }
        }]
    }, '->', {
        text: '刷新',
        iconCls: 'icon-refresh',
        handler: function(){
            catalogStore.reload();
        }
    }],
    viewConfig: {
        //stripeRows: false,// 取消偶数行背景色
        getRowClass: function(record) {
            if(record.get('delete') == 1){
                // 已删除产品背景色为深灰色
                return 'dark-row';
            }else if(!record.get('active')){
                // 停用产品背景色为灰色
                return 'gray-row';
            }/* else if(record.get('auditor_id') == null){
            	return 'light-red-row';
            } */
        }
    },
    columns: [{
        xtype: 'rownumberer'
    }, {
        text: 'ID',
        locked: true,
        hidden: true,
        dataIndex: 'id',
        width: 40
    }, {
        text: '产品分类 *',
        locked: true,
        dataIndex: 'type_id',
        renderer: typeRender,
        items: {
        	xtype: 'combobox',
            id: 'search_type_id',
            emptyText: '筛选...',
            displayField: 'name',
            valueField: 'id',
            width: 120,
            store: typeStore,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        },
        width: 120
    }, {
        text: '产品系列 *',
        locked: true,
        dataIndex: 'series_id',
        renderer: seriesRender,
        items: {
        	xtype: 'combobox',
            id: 'search_series_id',
            emptyText: '筛选...',
            displayField: 'name',
            valueField: 'id',
            width: 100,
            store: seriesStore,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        },
        width: 100
    }, {
        text: '内部型号 *',
        locked: true,
        dataIndex: 'model_internal',
        width: 140
    }, {
        text: '审核状态',
        locked: true,
        dataIndex: 'review',
        align: 'center',
        renderer: function(val, meta, record){
            if(val == 0){
            	meta.style = 'background-color: #ffe2e2';
            	return record.get('reviewer') + '：未审核';
            }else if(val == 1){
            	meta.style = 'background-color: #FF4500';
                return '拒绝';
            }else{
            	meta.style = 'background-color: #DFFFDF';
            	return '已审核';
            }
        },
        width: 180
    }, {
        text: '标准品型号 *',
        dataIndex: 'model_standard',
        width: 140
    }, {
        text: '产品代码',
        align: 'center',
        dataIndex: 'code',
        items: {
        	xtype: 'combobox',
            id: 'search_have_code',
            emptyText: '是否分配产品代码...',
            displayField: 'text',
            valueField: 'val',
            width: 130,
            store: Ext.create('Ext.data.Store', {
                fields: ['text', 'val'],
                data: [
                    {"text": "是", "val": 1},
                    {"text": "否", "val": 0}
                ]
            }),
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        },
        width: 130
    }, {
        text: '旧产品代码',
        align: 'center',
        dataIndex: 'code_old',
        width: 100
    }, {
        text: '产品描述 *',
        dataIndex: 'description',
        renderer: longtextRender,
        width: 180
    }, {
        text: '客户代码 *',
        dataIndex: 'code_customer',
        width: 80
    }, {
        text: '客户型号 *',
        dataIndex: 'model_customer',
        width: 120
    }, {
        text: '客户产品描述 *',
        dataIndex: 'description_customer',
        renderer: longtextRender,
        width: 180
    }, {
        text: '产品开发模式 *',
        dataIndex: 'developmode_id',
        renderer: modeRender,
        items: {
        	xtype: 'combobox',
            id: 'search_developmode_id',
            emptyText: '筛选...',
            displayField: 'name',
            valueField: 'id',
            width: 120,
            store: modeStore,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        },
        width: 120
    }, {
        text: '产品阶段',
        dataIndex: 'stage_name',
        items: {
        	xtype: 'combobox',
            id: 'search_stage_id',
            emptyText: '筛选...',
            displayField: 'name',
            valueField: 'id',
            width: 100,
            store: stageStore,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        },
        width: 100
    }, {
        text: 'EVT通过日期',
        hidden: true,
        dataIndex: 'evt_date',
        align: 'center',
        renderer: Ext.util.Format.dateRenderer('Y-m-d'),
        items: {
        	xtype: 'datefield',
        	format: 'Y-m-d',
        	//editable: false,
            id: 'search_evt_date',
            emptyText: '筛选...',
            width: 120,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        },
        width: 120
    }, {
        text: 'DVT通过日期',
        hidden: true,
        dataIndex: 'date_dvt',
        align: 'center',
        renderer: Ext.util.Format.dateRenderer('Y-m-d'),
        items: {
        	xtype: 'datefield',
        	format: 'Y-m-d',
        	//editable: false,
            id: 'search_dvt_date',
            emptyText: '筛选...',
            width: 120,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        },
        width: 120
    }, {
        text: 'QA1通过日期',
        hidden: true,
        dataIndex: 'qa1_date',
        align: 'center',
        renderer: Ext.util.Format.dateRenderer('Y-m-d'),
        items: {
        	xtype: 'datefield',
        	format: 'Y-m-d',
        	//editable: false,
            id: 'search_qa1_date',
            emptyText: '筛选...',
            width: 120,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        },
        width: 120
    }, {
        text: 'QA2通过日期',
        hidden: true,
        dataIndex: 'qa2_date',
        align: 'center',
        renderer: Ext.util.Format.dateRenderer('Y-m-d'),
        items: {
        	xtype: 'datefield',
        	format: 'Y-m-d',
        	//editable: false,
            id: 'search_qa2_date',
            emptyText: '筛选...',
            width: 120,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        },
        width: 120
    }, {
        text: '量产日期',
        hidden: true,
        dataIndex: 'mass_production_date',
        align: 'center',
        renderer: Ext.util.Format.dateRenderer('Y-m-d'),
        items: {
        	xtype: 'datefield',
        	format: 'Y-m-d',
        	//editable: false,
            id: 'search_mass_production_date',
            emptyText: '筛选...',
            width: 120,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        },
        width: 120
    }, {
        text: '备注',
        dataIndex: 'remark',
        width: 200
    }, {
        text: '创建人',
        dataIndex: 'create_user',
        align: 'center',
        width: 100,
        renderer: createUserRender,
        items: {
        	xtype: 'combobox',
        	id: 'filter_create_user',
            emptyText: '筛选...',
            displayField: 'name',
            valueField: 'id',
            store: createUserStore,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        }
    }, {
        text: '创建时间',
        dataIndex: 'create_time',
        align: 'center',
        renderer : Ext.util.Format.dateRenderer('Y-m-d H:i:s'),
        width: 140
    }, {
        text: '审核人',
        dataIndex: 'auditor_id',
        align: 'center',
        width: 100,
        renderer: auditorUserRender,
        items: {
        	xtype: 'combobox',
        	id: 'filter_auditor_id',
            emptyText: '筛选...',
            displayField: 'name',
            valueField: 'id',
            store: auditorUserStore,
            queryMode: 'local',
            listeners: {
                change: function(){
                	catalogStore.loadPage(1);
                }
            }
        }
    }, {
        text: '审核时间',
        dataIndex: 'auditor_time',
        align: 'center',
        renderer : Ext.util.Format.dateRenderer('Y-m-d H:i:s'),
        width: 140
    }, {
        text: '更新人',
        dataIndex: 'update_user',
        hidden: true,
        align: 'center',
        width: 80
    }, {
        text: '更新时间',
        dataIndex: 'update_time',
        hidden: true,
        align: 'center',
        renderer : Ext.util.Format.dateRenderer('Y-m-d H:i:s'),
        width: 140
    }, {
        text: '审核日志',
        dataIndex: 'review_info',
        renderer: function(val, cellmeta, record){
            cellmeta.tdAttr = 'data-qtip="' + record.get('review_info_tip') + '"';
            return '<span style="cursor:pointer;" onclick="viewReviewInfo(\''+val+'\');">'+val+'</span>';
        },
        width: 300
    }],
    listeners: {
        selectionchange: function( sel, selected, eOpts ){
            if(selected.length > 0){
                var chkReview = true;
                var chkDisable = true;
                var chkEnable = true;

                for(var i = 0; i < selected.length; i++){
                	if(selected[i].get('can_review') == 0){
                		chkReview = false;
                    }

                    if(!selected[i].get('active') || selected[i].get('review') != 2){
                    	chkDisable = false;
                    }

                    if(selected[i].get('active') || selected[i].get('review') != 2){
                    	chkEnable = false;
                    }
                }
                
                if(chkReview){
                    Ext.getCmp('reviewBtn').enable();
                }else{
                    Ext.getCmp('reviewBtn').disable();
                }

                if(chkDisable && !adminDisable){
                    Ext.getCmp('disableBtn').enable();
                }else{
                    Ext.getCmp('disableBtn').disable();
                }

                if(chkEnable && !adminDisable){
                    Ext.getCmp('enableBtn').enable();
                }else{
                    Ext.getCmp('enableBtn').disable();
                }
            }else{
                Ext.getCmp('reviewBtn').disable();
                Ext.getCmp('disableBtn').disable();
                Ext.getCmp('enableBtn').disable();
            }
        }
    },
    bbar: Ext.create('Ext.PagingToolbar', {
        store: catalogStore,
        displayInfo: true,
        displayMsg: '显示 {0} - {1} 共 {2}',
        emptyMsg: "没有数据",
        items: [{
            xtype: 'numberfield',
            id: 'page_size_set',
            value: 50,
            width: 150,
            hideTrigger: true,
            labelAlign: 'right',
            fieldLabel: '每页显示',
            listeners: {
                specialKey :function(field,e){
                      if (e.getKey() == Ext.EventObject.ENTER){
                    	  catalogStore.pageSize = Ext.getCmp('page_size_set').getValue();
                    	  catalogStore.loadPage(1);
                      }
                 }
            }
      }]
    })
});

Ext.onReady(function() {
    Ext.QuickTips.init();
    
    Ext.state.Manager.setProvider(Ext.create('Ext.state.CookieProvider'));
    
    Ext.create('Ext.Viewport', {
        layout: 'border',
        items: [{
            region: 'center',
            layout: 'fit',
            border: 0,
            plain: true,
            items: [catalogGrid]
        }]
    });

    catalogStore.loadPage(1);
});
</script>
</head>
<body>
</body>
</html>